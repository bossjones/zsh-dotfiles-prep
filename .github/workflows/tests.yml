name: CI
on:
  push:
    branches:
      - master
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
  #  # https://docs.github.com/en/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow_dispatch
  # workflow_dispatch:
  #  # Allow this workflow to be run manually (pushing to testpypi instead of pypi)
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)
        required: false
        default: "false"
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number|| github.sha }}
  cancel-in-progress: true
jobs:
  style:
    runs-on: ubuntu-22.04
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # OR "2" -> To retrieve the preceding commit.
          persist-credentials: false

      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Install shfmt
        run: brew install shfmt

      - run: contrib/style.sh

  # https://github.com/astral-sh/uv/blob/75c26229a2d8a9c2f249fd79f5fcf7b4d9ac77bb/.github/workflows/ci.yml#L88
  determine_changes:
    name: Determine changes
    runs-on: macOS-latest
    outputs:
      # Flag that is raised when any code is changed
      code: ${{ steps.changed-files.outputs.code_any_changed }}
    permissions:
      pull-requests: read
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      # - run: echo "🔎 The name of your branch is ${{ github.ref_name }} and your repository is ${{ github.repository }}."
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # OR "2" -> To retrieve the preceding commit.
          persist-credentials: false
      - uses: tj-actions/changed-files@v45
        id: changed-files
        with:
          files_yaml: |
            formula:
              - "Formula/**/*.rb"
              - "test_*.py"
              - "conftest.py"
              - "requirements-test.txt"

      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done

  tests:
    permissions:
      contents: read
    strategy:
      matrix:
        include:
          - os: macOS
            runner: macOS-latest
          # - os: Linux
          #   runner: ubuntu-latest
          #   workdir: /github/home
          #   container: '{"image": "ghcr.io/homebrew/ubuntu22.04:master", "options": "--user=linuxbrew"}'
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.runner }}
    # container: ${{ matrix.container && fromJSON(matrix.container) || '' }}
    defaults:
      run:
        shell: bash
        # working-directory: ${{ matrix.workdir || github.workspace }}
        working-directory: ${{ github.workspace }}
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Cache Homebrew Bundler RubyGems
        id: cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ runner.os }}-rubygems-

      - name: Install Homebrew Bundler RubyGems
        if: steps.cache.outputs.cache-hit != 'true'
        run: brew install-bundler-gems

      # - name: Cleanup macOS
      #   if: runner.os == 'macOS'
      #   run: |
      #     sudo rm -rf /usr/local/bin/brew /usr/local/.??* \
      #                 /usr/local/Homebrew \
      #                 /Applications/Xcode.app /usr/local/Caskroom \
      #                 /Library/Developer/CommandLineTools

      # - name: Use newer Xcode
      #   if: runner.os == 'macOS'
      #   run: |
      #     ls /Applications/Xcode*.app || true
      #     sudo xcode-select --switch /Applications/Xcode_13.3.1.app/Contents/Developer || true
      #   continue-on-error: true

      # - name: Install shell dependencies (macOS)
      #   if: runner.os == 'macOS'
      #   run: |
      #     brew install coreutils parallel \
      #       elvish \
      #       fish \
      #       nushell \
      #       powershell \
      #       zsh

      - name: Install shell dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install \
            elvish \
            fish \
            zsh

      # Allow debugging with tmate
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
        with:
          # Use registered public SSH key(s)
          # If you have registered one or more public SSH keys with your GitHub profile, tmate will be started such that only those keys are authorized to connect, otherwise anybody can connect to the tmate session. If you want to require a public SSH key to be installed with the tmate session, no matter whether the user who started the workflow has registered any in their GitHub profile, you will need to configure the setting limit-access-to-actor to true, like so:
          limit-access-to-actor: true

      - run: bin/zsh-dotfiles-prereq-installer
        env:
          ZSH_DOTFILES_PREP_CI: 1
          ZSH_DOTFILES_PREP_DEBUG: 1
          # NOTE: Skip Brew bundle for now, speed up tests
          ZSH_DOTFILES_PREP_GITHUB_USER: bossjones
          ZSH_DOTFILES_PREP_SKIP_BREW_BUNDLE: 1

      - name: Rerun bin/zsh-dotfiles-prereq-installer
        run: bin/zsh-dotfiles-prereq-installer
        env:
          ZSH_DOTFILES_PREP_CI: 1
          ZSH_DOTFILES_PREP_GITHUB_USER: bossjones
          ZSH_DOTFILES_PREP_SKIP_BREW_BUNDLE: 1
